apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: final  # Add the namespace here
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: 681863550751.dkr.ecr.us-east-1.amazonaws.com/docker-containers:flask-app-latest
          imagePullPolicy: Always  # Ensures image is always pulled from the repository
          ports:
            - containerPort: 81  # Ensure the app is listening on port 81
          env:
            - name: DBHOST
              value: "mysql-service"  # MySQL service host
            - name: DBUSER
              value: "root"  # Database username
            - name: DBPWD
              valueFrom:
                secretKeyRef:
                  name: db-secret  # Ensure this secret exists in the same namespace
                  key: password    # The key inside the secret
            - name: DATABASE
              value: "employees"  # Database name
            - name: DBPORT
              value: "3306"  # Database port
            - name: BACKGROUND_IMAGE
              value: "https://eks-pr-bucket.s3.us-east-1.amazonaws.com/Kubernetes.jpeg"  # URL to background image
            - name: GROUP_NAME
              value: "GROUP11"  # Group name
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-secret  # Secret name for AWS credentials
                  key: AWS_ACCESS_KEY_ID  # Key for AWS Access Key ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secret  # Secret name for AWS credentials
                  key: AWS_SECRET_ACCESS_KEY  # Key for AWS Secret Access Key
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: aws-secret  # Secret name for AWS credentials
                  key: AWS_SESSION_TOKEN  # Key for AWS Session Token
            - name: APP_COLOR
              value: "lime"  # App color
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"

